generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id        String     @id @default(cuid()) @map("_id")
  name      String
  email     String     @unique
  avatarUrl String?
  password  String?
  bio       String?
  session   sessions[]
  blog      blogs[]
  likes     likes[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  comments  comments[]
}

type info {
  os             String?
  browser        String?
  browserVersion String?
  location       String?
}

model sessions {
  id        String   @id @default(cuid()) @map("_id")
  userId    String
  ip        String
  info      info
  expiresAt DateTime
  createdAt DateTime @default(now())

  user users @relation(fields: [userId], references: [id])

  @@index([userId], map: "session_userId_fkey")
}

model blogs {
  id          String   @id @map("_id")
  title       String
  description String
  content     String
  coverUrl    String
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  likes       likes[]

  author   users      @relation(fields: [authorId], references: [id])
  comments comments[]
}

model likes {
  id        String   @id @default(cuid()) @map("_id")
  blogId    String
  userId    String
  createdAt DateTime @default(now())

  blog blogs @relation(fields: [blogId], references: [id])
  user users @relation(fields: [userId], references: [id])

  @@unique([blogId, userId])
}

model comments {
  id        String   @id @default(cuid()) @map("_id")
  blogId    String
  userId    String
  content   String
  createdAt DateTime @default(now())

  author users @relation(fields: [userId], references: [id])
  blog   blogs @relation(fields: [blogId], references: [id])
}
